.rowWrapper {
  height: 100%;
  box-sizing: border-box;
  cursor: move;

  &:hover {
    opacity: 0.7;
  }

  &:active {
    opacity: 1;
  }
}

.rowWrapperDragDisabled {
  cursor: default;
}

.row {
  height: 100%;
  white-space: nowrap;
  display: flex;
  position: relative;

  & > * {
    box-sizing: border-box;
  }
}

/**
 * The outline of where the element will go if dropped, displayed while dragging
 */
.rowLandingPad {
  border: none;
  box-shadow: none;
  outline: none;

  * {
    opacity: 0 !important;
  }

  &::before {
    background-color: lightblue;
    border: 2px dotted black;
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
  }
}

/**
 * Alternate appearance of the landing pad when the dragged location is invalid
 */
.rowCancelPad {
  @extend .rowLandingPad;

  &::before {
    background-color: #e6a8ad;
  }
}

/**
 * Nodes matching the search conditions are highlighted
 */
.rowSearchMatch {
  box-shadow: inset 0 -7px 7px -3px #0080ff;
}

/**
 * The node that matches the search conditions and is currently focused
 */
.rowSearchFocus {
  box-shadow: inset 0 -7px 7px -3px #fc6421;
}

%rowItem {
  display: inline-block;
  vertical-align: middle;
}

.rowContents {
  @extend %rowItem;
  position: relative;
  height: 100%;
  flex: 1 0 auto;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.rowLabel {
  @extend %rowItem;
  flex: 0 1 auto;
  padding-right: 20px;
}

.rowToolbar {
  @extend %rowItem;
  flex: 0 1 auto;
  display: flex;
}

.toolbarButton {
  @extend %rowItem;
}

.collapseButton,
.expandButton {
  appearance: none;
  border: none;
  background: transparent;
  padding: 0;
  z-index: 12;
  position: absolute;
  top: 35%;
  width: 30px;
  height: 30px;
  transform: translate3d(-15%, -45%, 0);
  cursor: pointer;

  &::after {
    content: '';
    position: absolute;
    transform-origin: 7px 4px;
    transform: translate3d(-50%, -20%, 0);
    border: solid transparent 5px;
    border-left-width: 4px;
    border-right-width: 4px;
    border-top-color: #b0b0b0;
    opacity: 0;    
  }

  &:hover::after {
    border-top-color: #ff0000;
    opacity: 1.0;
  }

}

.expandButton::after {
  transform: translate3d(-50%, -60%, 0) rotateZ(-90deg);
}

.collapseButtonIcon,
.expandButtonIcon {
  &::after {    
    content: '';
    appearance: none;
    border: none;
    background: transparent;
    padding: 0;

    position: absolute;
    transform: translate3d(-120%, 85%, 0);
    border: solid transparent 5px;
    border-left-width: 4px;
    border-right-width: 4px;
    border-top-color: #b0b0b0;
    cursor: pointer;    
    opacity: 0;    
  }

  &:hover::after {
    border-top-color: #606060;
    opacity: 1.0;
  }

}

.expandButtonIcon::after {
  transform: translate3d(-85%, 65%, 0) rotateZ(-90deg);  
  opacity: 0.0;
}

/**
 * Line for under a node with children
 */
.lineChildren {
  height: 100%;
  display: inline-block;
}

/* ==========================================================================
   Scaffold

    Line-overlaid blocks used for showing the tree structure
   ========================================================================== */
.lineBlock {
  height: 100%;
  position: relative;
  display: inline-block;
  flex: 0 0 auto;
}

.absoluteLineBlock {
  @extend .lineBlock;
  position: absolute;
  top: 0;
}

/**
 * +--+--+
 * |  |  |
 * |  |  |
 * |  |  |
 * +--+--+
 */
.lineFullVertical::after {
  content: '';
  position: absolute;
  top: -2px;
  width: 1px;
  height: 25px;  
  left: 25%;
  border-left: 1px solid #d0d0e0;
}

